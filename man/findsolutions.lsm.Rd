% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WrapperFunctions.R
\name{findsolutions.lsm}
\alias{findsolutions.lsm}
\title{Find Solutions (Fit Variogram)}
\usage{
findsolutions.lsm(
  vario,
  id,
  initial.position,
  lower.bound = rep(1e-08, length(initial.position)),
  upper.bound = c(c(Inf, Inf, pi/2), rep(Inf, length(initial.position) - 3)),
  lower.delta = 0.1,
  upper.delta = 10,
  remove_not_convergent = FALSE,
  print_output = TRUE,
  n_threads = -1
)
}
\arguments{
\item{vario}{a "sample_variogram" object obtained using variogram.lsm()}

\item{id}{the type of variogram to be used. Can be one of the following: "exponential", "gaussian", "matern", "maternNuFixed N", where N must
be replaced with a double of your choice. If the id is not correct, "exponential" is used by default. Remember that the matern has an extra
parameter nu that must be passed to the function.}

\item{initial.position}{the starting position to be given to the optimizer}

\item{lower.bound}{the lower bound for the optimization, by default (1e-8, 1e-8, ...)}

\item{upper.bound}{the upper bound for the optimizaion, by default (Inf, Inf, pi/2, Inf, Inf, ...)}

\item{lower.delta}{set the minimum value for Cross-Validation search for optimal delta in smoothing equal to lowerdelta*epsilon}

\item{upper.delta}{set the maximum value for Cross-Validation search for optimal delta in smoothing equal to upperdelta*epsilon}

\item{remove_not_convergent}{if set to TRUE removes the anchorpoints which cause troubles to the optimizer, by default is TRUE}

\item{print_output}{if set to FALSE suppress the console output, by default is TRUE}

\item{n_threads}{the number of threads for OpenMP, by default is equal to -1, which means that OpenMP will use all the available threads.}
}
\value{
an object containing the matrix with the optimal parameters, the optimal value of delta for smoothing, the value of the bandwidth
parameter epsilon used, the matrix with the coordinates of the anchor points used, the id of the variogram chosen and the id of the kernel
you used to generate the sample variogram
}
\description{
for each anchorpoints solves a problem of nonlinear optimization and returns the results
}
\details{
given an object of type "sample_variogram" returned by variogram.lsm, this function solves a problem of non linear
optimization in order to find the parameters that better fit the variogram function chosen via id in each anchor point. The initial position
to find the optimum must be provided by the user, which can also provide the upper and lower bounds for the solutions. Always remember that
the order of the parameters is always lambda1, lambda2, phi and sigma followed by additional ones required by the chosen variogram function
}
\examples{
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
a <- find_anchorpoints.lsm(d,12,FALSE)
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
}
