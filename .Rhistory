max(sqrt(lambda_2))
solu <- findsolutions.lsm(vario, "exponential", c(0.025,0.025,pi/4,15),upper.bound = c(0.2,0.2,pi/2,Inf),lower.delta = 1)#2epsilon delta
min(sqrt(lambda_2))
min(sqrt(lambda_1))
solu <- findsolutions.lsm(vario, "exponential", c(0.025,0.025,pi/4,15),upper.bound = c(0.18,0.18,pi/2,Inf),lower.delta = 1)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.15,0.15,pi/4,15),upper.bound = c(0.18,0.18,pi/2,Inf),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
#plotvario(vario,6)
plotvario(vario,20)
solu <- findsolutions.lsm(vario, "exponential", c(0.15,0.15,pi/4,15),upper.bound = c(0.818,0.818,pi/2,Inf),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.15,0.65,pi/4,15),upper.bound = c(0.818,0.818,pi/2,Inf),lower.delta = 1)#2epsilon delta
vario <- variogram.lsm(z,d,a$anchorpoints,0.16782,n_angles = 8,n_intervals = 15,"gaussian",n_threads = 16)
solu <- findsolutions.lsm(vario, "exponential", c(0.15,0.25,pi/4,15),upper.bound = c(0.818,0.818,pi/2,Inf),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
min(sqrt(lambda_2))
min(sqrt(lambda_1))
max(sqrt(lambda_1))
max(sqrt(lambda_2))
solu <- findsolutions.lsm(vario, "exponential", c(0.15,0.15,pi/4,15),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.1,0.1,pi/4,10),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
vario <- variogram.lsm(z,d,a$anchorpoints,0.2,n_angles = 8,n_intervals = 15,"gaussian",n_threads = 16)
solu <- findsolutions.lsm(vario, "exponential", c(0.1,0.1,pi/4,10),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
vario <- variogram.lsm(z,d,a$anchorpoints,0.2,n_angles = 6,n_intervals = 12,"gaussian",n_threads = 16)
solu <- findsolutions.lsm(vario, "exponential", c(0.1,0.1,pi/4,10),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.1,0.1,pi/4,1),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.15,0.1,pi/4,1),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.1,0.15,pi/4,1),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.01,0.015,pi/4,1),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.01,0.01,pi/4,1),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.0001,0.0001,pi/4,1),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
lambda_2 = sqrt(0.0008 - 0.00025*grid$x*grid$y)
lambda_2
lambda_2 = sqrt(0.008 - 0.0025*grid$x*grid$y)
lambda_1 = sqrt(0.004 + 0.0015*grid$x*grid$y)
lambda_2
lambda_1
#theta = rep(pi/4,N);
#sigma = rep(1.5,N);
nu = 1
expose_stan_functions("C:/Users/Giacomo/Desktop/Tesi/PACS/Simulazioni_Cri_dec/functions_to_expose.stan")
Aniso = Compute_Aniso(lambda_1,lambda_2,theta)
dets = Compute_Determinants(lambda_1,lambda_2)
Cov = matern_ns_corr_mat(t(grid),Aniso,dets,nu,sigma)
model=stan_model("C:/Users/Giacomo/Desktop/Tesi/PACS/Simulazioni_Cri_dec/simulazioni.stan")
data = list(N = N, Locations = as.matrix(t(grid)), lambda_1 = lambda_1, lambda_2 = lambda_2, theta = theta, nu = nu, sigma = sigma)
simu_fit <- sampling(object = model, data=data,
warmup=0, iter=100, chains=1, seed=494838,
algorithm="Fixed_param", refresh=10)
realizations = matrix( data = unlist(simu_fit@sim$samples), ncol = 100,byrow = TRUE)
z=cbind(realizations[1:N,44]+mu1,realizations[1:N,63]+mu2,realizations[1:N,39]+mu3,realizations[1:N,33]+mu4,realizations[1:N,35]+mu5)
d<-cbind(grid$x,grid$y)
z=cbind(realizations[1:N,44]+mu1,realizations[1:N,63]+mu2,realizations[1:N,39]+mu3,realizations[1:N,33]+mu4,realizations[1:N,35]+mu5)
a <- find_anchorpoints.lsm(d,12)
vario <- variogram.lsm(z,d,a$anchorpoints,0.2,n_angles = 6,n_intervals = 12,"gaussian",n_threads = 16)
#plotvario(vario,6)
plotvario(vario,20)
lambda_1
solu <- findsolutions.lsm(vario, "exponential", c(0.01,0.01,pi/4,1),upper.bound = c(0.18,0.15,pi/2,Inf),lower.delta = 1)#2epsilon delta
sqrt(lambda_1)
max(sqrt(lambda_1))
max(sqrt(lambda_2))
solu <- findsolutions.lsm(vario, "exponential", c(0.21,0.21,pi/4,1),upper.bound = c(0.35,0.35,pi/2,Inf),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.21,0.21,pi/4,10),upper.bound = c(0.35,0.35,pi/2,Inf),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.21,0.21,pi/4,15),upper.bound = c(0.35,0.35,pi/2,Inf),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.21,0.21,pi/4,15),upper.bound = c(0.35,0.35,pi/2,Inf),lower.delta = 0.5)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
p = ggplot(grid_toplot) + geom_tile(mapping = aes(x,y, fill = lambda_1)) + scale_fill_viridis(option = "turbo")
plot(p)
p = ggplot(grid_toplot) + geom_tile(mapping = aes(x,y, fill = sqrt(lambda_1))) + scale_fill_viridis(option = "turbo")
plot(p)
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.21,0.21,pi/4,15),upper.bound = c(0.3,0.3,pi/2,Inf),lower.delta = 0.5)#2epsilon delta
max(sqrt(lambda_1))
max(sqrt(lambda_2))
min(sqrt(lambda_2))
max(sqrt(lambda_2))
min(sqrt(lambda_1))
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,15),upper.bound = c(0.32,0.27,pi/2,Inf),lower.delta = 0.5)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.32,0.27,pi/2,Inf),lower.delta = 0.5)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.28,pi/2,Inf),lower.bound = c(0.26,0.22,pi/2,Inf),lower.delta = 0.5)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.28,pi/2,Inf),lower.bound = c(0.26,0.22,1e-8,1e-8),lower.delta = 0.5)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.28,pi/2,Inf),lower.bound = c(0.26,0.22,1e-8,1e-8),lower.delta = 2)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.28,pi/2,Inf),lower.bound = c(0.26,0.22,1e-8,1e-8),lower.delta = 1)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.28,pi/2,Inf),lower.bound = c(0.26,0.22,1e-8,1e-8),lower.delta = 1.2)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
z
library(fda)
basisObj = create.constant.basis(rangeval)
create.bspline.basis(rangeval = NULL, nbasis = NULL, norder = 4, breaks = NULL,
dropind = NULL, quadvals = NULL, values = NULL, basisvalues = NULL,
names = "bspl")
basisObj = create.fourier.basis(c(0,1), 5, 365)
fd(coef=z, basisobj=basisObj, fdnames=NULL)
fd(coef=t(z), basisobj=basisObj, fdnames=NULL)
basisObj
fd(coef=c(1,2,3,4,5), basisobj=basisObj, fdnames=NULL)
fourier=fd(coef=c(1,2,3,4,5), basisobj=basisObj, fdnames=NULL)
plot(fourier)
fourier=fd(coef=c(1,2,3,4,5,6), basisobj=basisObj, fdnames=NULL)
fourier=fd(coef=c(1,2,3,4,5), basisobj=basisObj, fdnames=NULL)
plot(fourier)
basisObj = create.fourier.basis(c(0,365), 5, 365)
fourier=fd(coef=c(1,2,3,4,5), basisobj=basisObj, fdnames=NULL)
plot(fourier)
fourier=fd(coef=z[1,], basisobj=basisObj, fdnames=NULL)
plot(fourier)
z[1,]
fourier=fd(coef=z[1:2,], basisobj=basisObj, fdnames=NULL)
fourier=fd(coef=t(z[1:2,]), basisobj=basisObj, fdnames=NULL)
plot(fourier)
z[1:2]
z[1:2,]
fourier=fd(coef=t(z[1:20,]), basisobj=basisObj, fdnames=NULL)
plot(fourier)
fourier=fd(coef=t(z[1:2000,]), basisobj=basisObj, fdnames=NULL)
plot(fourier)
fourier=fd(coef=t(z), basisobj=basisObj, fdnames=NULL)
plot(fourier)
mu1 = 20+rep(20,N)* (1 - sqrt(grid$x^2 + grid$y^2)/sqrt(2)) + rep(16,N) * sqrt(grid$x^2 + grid$y^2)/sqrt(2)
mu2 = 20+rep(30,N)* (1 - sqrt(grid$x^2 + grid$y^2)/sqrt(2)) + rep(22,N) * sqrt(grid$x^2 + grid$y^2)/sqrt(2)
mu3 = 20+rep(20,N)* (1 - sqrt(grid$x^2 + grid$y^2)/sqrt(2)) + rep(17,N) * sqrt(grid$x^2 + grid$y^2)/sqrt(2)
mu4 = 20+rep(20,N)* (1 - sqrt(grid$x^2 + 3*grid$y^2)/sqrt(2)) + rep(28,N) * sqrt(2*grid$x^2 + grid$y^2)/sqrt(2)
mu5 = 20+rep(25,N)* (1 - sqrt(grid$x^2 + grid$y^2)/sqrt(3)) + rep(23,N) * sqrt(grid$x^2 + grid$y^2)/sqrt(2)
z1=cbind(realizations[1:N,44]+mu1,realizations[1:N,63]+mu2,realizations[1:N,39]+mu3,realizations[1:N,33]+mu4,realizations[1:N,35]+mu5)
z=cbind(realizations[1:N,44]+mu1,realizations[1:N,63]+mu2,realizations[1:N,39]+mu3,realizations[1:N,33]+mu4,realizations[1:N,35]+mu5)
mu1 = 20+rep(20,N)* (1 - sqrt(grid$x^2 + grid$y^2)/sqrt(2)) + rep(19,N) * sqrt(grid$x^2 + grid$y^2)/sqrt(2)
mu2 = 20+rep(30,N)* (1 - sqrt(grid$x^2 + grid$y^2)/sqrt(2)) + rep(29,N) * sqrt(grid$x^2 + grid$y^2)/sqrt(2)
mu3 = 20+rep(20,N)* (1 - sqrt(grid$x^2 + grid$y^2)/sqrt(2)) + rep(19,N) * sqrt(grid$x^2 + grid$y^2)/sqrt(2)
mu4 = 20+rep(20,N)* (1 - sqrt(grid$x^2 + 3*grid$y^2)/sqrt(2)) + rep(21,N) * sqrt(2*grid$x^2 + grid$y^2)/sqrt(2)
mu5 = 20+rep(25,N)* (1 - sqrt(grid$x^2 + grid$y^2)/sqrt(3)) + rep(26,N) * sqrt(grid$x^2 + grid$y^2)/sqrt(2)
fourier=fd(coef=t(z), basisobj=basisObj, fdnames=NULL)
plot(fourier)
vario <- variogram.lsm(z,d,a$anchorpoints,0.1,n_angles = 6,n_intervals = 12,"gaussian",n_threads = 16)
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.28,pi/2,Inf),lower.bound = c(0.26,0.22,1e-8,1e-8),lower.delta = 1.2)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.28,pi/2,Inf),lower.bound = c(0.26,0.22,1e-8,1e-8),lower.delta = 2)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.29,pi/2,Inf),lower.bound = c(0.26,0.22,1e-8,1e-8),lower.delta = 2)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.276,pi/2,Inf),lower.bound = c(0.26,0.22,1e-8,1e-8),lower.delta = 2)#2epsilon delta
solu <- findsolutions.lsm(vario, "exponential", c(0.25,0.25,pi/4,5),upper.bound = c(0.33,0.28,pi/2,Inf),lower.bound = c(0.26,0.22,1e-8,1e-8),lower.delta = 2)#2epsilon delta
mypoints<-plot.lsm(model = solu, a = a, z = z[,2], d = d, n_points = 20, points_arrangement = "straight",kriging = F, arrow_scale = 5,ellipse_scale = 5)
fourier$coefs
fourier
fourier[1]
fourier$coefs
fourier$coefs[1]
fourier$coefs[2]
fourier$coefs[3]
eval(fourier)
eval.fd(1,fourier)
eval.fd(100,fourier)
eval.fd(fourier,10)
eval.fd(fourier,10,evalarg = 1)
eval.fd(fourier)
eval.fd(fdobj=fourier,7000)
eval.fd(fdobj=fourier,700)
eval.fd(fdobj=fourier,7)
eval.fd(fdobj=fourier,70)
eval.fd(fdobj=fourier,700)
eval.fd(fdobj=fourier,1)
eval.fd(fdobj=fourier,1)
eval.basis(basisobj = basisObj, 1:365)
eval.fd(basisobj = basisObj, 1:365)
eval.fd(fourier, 1:365)
eval.fd(basisobj = basisObj, 1)
eval.basis(basisobj = basisObj, 1)
t1=eval.basis(basisobj = basisObj, 1)
z*t(1)
z%*%t(1)
z%*%t1
z%*%t(t1)
t(z)%*%t(t1)
t(z)%*%t1
z%*%t1
z
z%*%t(t1)
coef1=z%*%t(t1)
p = ggplot(grid_toplot) + geom_tile(mapping = aes(x,y, fill = coef1)) + scale_fill_viridis(option = "turbo")
plot(p)
x11()
p = ggplot(grid_toplot) + geom_tile(mapping = aes(x,y, fill = coef1)) + scale_fill_viridis(option = "turbo")
plot(p)
eval.basis(basisobj = basisObj, 200)
t200=eval.basis(basisobj = basisObj, 200)
coef200=z%*%t(t200)
x11()
p = ggplot(grid_toplot) + geom_tile(mapping = aes(x,y, fill = coef200)) + scale_fill_viridis(option = "turbo")
plot(p)
t200=eval.basis(basisobj = basisObj, 200)
coef200=z%*%t(t200)
t100=eval.basis(basisobj = basisObj, 100)
coef100=z%*%t(t100)
p = ggplot(grid_toplot) + geom_tile(mapping = aes(x,y, fill = coef100)) + scale_fill_viridis(option = "turbo")
plot(p)
x11()
p = ggplot(grid_toplot) + geom_tile(mapping = aes(x,y, fill = coef100)) + scale_fill_viridis(option = "turbo")
plot(p)
t300=eval.basis(basisobj = basisObj, 300)
coef300=z%*%t(t300)
x11()
p = ggplot(grid_toplot) + geom_tile(mapping = aes(x,y, fill = coef300)) + scale_fill_viridis(option = "turbo")
plot(p)
library(LocallyStationaryModels)
# Find anchorpoints
a <- find_anchorpoints.lsm(d,10)
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- 5*meuse$elev
y2 <- meuse$cadmium
y3 <- meuse$lead/30
# Find anchorpoints
a <- find_anchorpoints.lsm(d,10)
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y2),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,10,-5,-5,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-50,100,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,1,-1,1,1),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
library(LocallyStationaryModels)
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,1,-1,1,1),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,1,0,0,1),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-10,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,10,-10,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
vario$empiricvariogram
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-1,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
library(LocallyStationaryModels)
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-1,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-1,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-1,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-1,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-1,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-1,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,-1,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
# Plot of the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Plot of the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100))
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y,y2),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100))
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100))
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario1, "exponential", c(200,200,0.01,100))
solu
solu <- findsolutions.lsm(vario1, "exponential", c(200,200,0.01,100))
##
x11()
solu <- findsolutions.lsm(vario1, "exponential", c(200,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(200,2000,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(200,2000,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(200,2000,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(200,20000,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,20000,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,20000,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,20000,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,20000,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,2000,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y2),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
library(LocallyStationaryModels)
# Find anchorpoints
a <- find_anchorpoints.lsm(d,10)
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y2),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-1,-1,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-30,0,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-30,0,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,10,-30,0,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,10,-3,0,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,-Inf,1e-8))
library(LocallyStationaryModels)
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,10,-3,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y2),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,10,-3,10),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-3,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-20,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
solu
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(20,20,0.01,100,-20,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
solu
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(20,20,0.01,100,-20,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,0,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
solu
library(LocallyStationaryModels)
# Find anchorpoints
a <- find_anchorpoints.lsm(d,1)
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
library(LocallyStationaryModels)
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
solu
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
solu
# Find anchorpoints
a <- find_anchorpoints.lsm(d,10)
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,1000))
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,100))
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,100))
# Find anchorpoints
a <- find_anchorpoints.lsm(d,10)
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario1, "exponential", c(20,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 15, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
solu <- findsolutions.lsm(vario1, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 15, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
# Find anchorpoints
a <- find_anchorpoints.lsm(d,20)
vario <- variogram.lsm(cbind(y,y),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
# Plot of the solutions
vario1 <- variogram.lsm(cbind(y),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
solu <- findsolutions.lsm(vario1, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 15, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
# Find anchorpoints
a <- find_anchorpoints.lsm(d,10)
vario <- variogram.lsm(cbind(y,y),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exponential"), c(200,200,0.01,100,-10,100),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8))
solu
library(LocallyStationaryModels)
# Load the libraries
library(LocallyStationaryModels)
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- 5*meuse$elev
y2 <- meuse$cadmium
y3 <- meuse$lead/30
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y2),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exp"), c(570/2,571/2,0.1,100,1000,1000,1000,1000,1000),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8,-Inf,-Inf,-Inf))
# Plot of the solutions
solu$solutions
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 1, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 1, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
library(LocallyStationaryModels)
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y2),d,a$anchorpoints,570,4,15,dim = 2,kernel_id = "gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, c("exp"), c(570/2,571/2,0.1,100,1000,1000,1000,1000,1000),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8,-Inf,-Inf,-Inf))
# Plot of the solutions
solu$solutions
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 1, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
library(LocallyStationaryModels)
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 1, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
library(LocallyStationaryModels)
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 1, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
mypoints
# Build the empiric variogram
vario <- variogram.lsm(cbind(y,y2),d,a$anchorpoints,570,4,15,dim = 1,kernel_id = "gaussian")
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 1, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
# Find the solutions
solu <- findsolutions.lsm(vario, c("exp"), c(570/2,571/2,0.1,100,1000,1000,1000,1000,1000),lower.bound = c(1e-8,1e-8,1e-8,1e-8,-Inf,1e-8,-Inf,-Inf,-Inf))
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 1, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
library(LocallyStationaryModels)
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 1, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 5, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
previsions <- predict.lsm(solu, d, plot_output = T)
max(previsions$zpredicted - y)
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 5, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
library(LocallyStationaryModels)
mypoints<-plot.lsm(model = solu, a = a, z = cbind(y,y2), d = d, n_points = 15, points_arrangement = "straight", kriging = TRUE,
ellipse_scale = 2.5, arrow_scale = 1.5)
